{
  "contractName": "TestERC20",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "giveMeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"giveMeTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/vcrizpy/Desktop/dapps/ethindia2.0/aztec-zk-subscriptions/contracts/TestERC20.sol\":\"TestERC20\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"/Users/vcrizpy/Desktop/dapps/ethindia2.0/aztec-zk-subscriptions/contracts/TestERC20.sol\":{\"keccak256\":\"0x831394aa38823e38afad4fce3818aa982d58d7cbec283341ce2e6319c36f2a96\",\"urls\":[\"bzzr://7b1227a8a1410abf344bd0206d622b0e0e20a364c470701158e49046625fd824\"]},\"@aztec/protocol/contracts/ACE/ACE.sol\":{\"keccak256\":\"0xa5f74acb3e4c278284d44ef6e11b470537260d3d9a94a6fa7b61fb186477ecb4\",\"urls\":[\"bzzr://48fe086b3d49efd624728d5050c37ca17f5962b5557a9ad60d49f2676812d747\"]},\"@aztec/protocol/contracts/ACE/NoteRegistry.sol\":{\"keccak256\":\"0x94c7db807c9b316de5886d134821fdaf539e3480e06e8a9434ec8903076d3f86\",\"urls\":[\"bzzr://498808929c46c420f6a2085fb5d86be827898ba759f8e53072b177aaad8193c8\"]},\"@aztec/protocol/contracts/ERC1724/ZkAsset.sol\":{\"keccak256\":\"0x224f97dda164b010f8c7ca63ba7f214b3dda3873267a107c063b6ba0bda6d9b5\",\"urls\":[\"bzzr://80ffd456eed74f6fe3fff5bb373dd07756596de128dfe0181e2eb4b703e4c12b\"]},\"@aztec/protocol/contracts/ERC1724/ZkAssetMintable.sol\":{\"keccak256\":\"0xd41e21b2ca15c9311b124d424fd726ce041aae061f25e74e5a621210aa11dcd3\",\"urls\":[\"bzzr://ab9a470442040237bd5a3a88cd4b905c36e6eea4ec333e6db98b4ad9e7b7deb2\"]},\"@aztec/protocol/contracts/ERC1724/base/ZkAssetBase.sol\":{\"keccak256\":\"0x10d51d14855c784ca976b7028edcbb1fcb7e1d0ac2a3dec3907c89e8370642fd\",\"urls\":[\"bzzr://e54379fa59ea8a89937ad2cbd29d209bdeb6d95a2c8cfb0c3455834f6785e9f7\"]},\"@aztec/protocol/contracts/ERC1724/base/ZkAssetMintableBase.sol\":{\"keccak256\":\"0xdbd8059c36d81e20f628ac47eb97a98fbfe1254cb59303f163c678e2d7122e52\",\"urls\":[\"bzzr://3243e8515118540a4ec7682237c4222e710a08ea5363339d12d839b1400bb680\"]},\"@aztec/protocol/contracts/ERC1724/base/ZkAssetOwnableBase.sol\":{\"keccak256\":\"0xbbfef1d70e62eb03452b66c93a6a0333620022cc8ea2757459c5a4414afd4ce0\",\"urls\":[\"bzzr://d2b26e51e1402bc2fbf16e7225d22f5cd8721c3e5f345a711e75c06b36c7bd3a\"]},\"@aztec/protocol/contracts/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa0d397d0a88924cd8acb306642be3fca521e69a145826e5f916ef272c6e8e381\",\"urls\":[\"bzzr://ad5a55a815645594cb4b946d4d85430c40fbb4c926b6e15fc0cd0b19fdf552a1\"]},\"@aztec/protocol/contracts/interfaces/IAZTEC.sol\":{\"keccak256\":\"0xfb7c05699bd7b182e7dd81facb093bd430bbf5ab11c4ed86f7d8fe0e8d17ffde\",\"urls\":[\"bzzr://208d0f482e8af0c18a68a73d3efe0e557a71764ac32a0f88bdc8571b2235964d\"]},\"@aztec/protocol/contracts/interfaces/IZkAsset.sol\":{\"keccak256\":\"0x7d05bbe65423c3f8d2844a12f131607008d4130916f4aef2e1b471838acb4d63\",\"urls\":[\"bzzr://566d1cc152979de4135912836fea71cdddd92c6e2b391ac111c74b3485c433bc\"]},\"@aztec/protocol/contracts/libs/LibEIP712.sol\":{\"keccak256\":\"0x105d65fa35288139cf0edb2749373df28800e31727a24c4923abf1eaf16486b0\",\"urls\":[\"bzzr://210a23f95cf0cba1fedc9d2c58f223f089a45fc35416e99fef2a89ee0723caaf\"]},\"@aztec/protocol/contracts/libs/NoteUtils.sol\":{\"keccak256\":\"0x10ff71793eb11637967308474a63033830f86960f28754438ce5073abe52dd2c\",\"urls\":[\"bzzr://0f08d33a2839e9f40eaebe3047adbcd7eb8d0a0d7c2cde433ac8978fbf765fb3\"]},\"@aztec/protocol/contracts/libs/ProofUtils.sol\":{\"keccak256\":\"0xce4dfdc9af28abe040d0ae2fdff1ed32b225623dac56597810f6076204ab2b9b\",\"urls\":[\"bzzr://5284bf722d4353c6f3bdad07ac35271580bbceba7646287bd36d01061c704807\"]},\"@aztec/protocol/contracts/libs/SafeMath8.sol\":{\"keccak256\":\"0x803d6f285fcf450aaf882189dd52c47860ca1f388db767b09c10239872f59d99\",\"urls\":[\"bzzr://cd4012c351b38f431f626bd330421dae25d4d6e36e11267f58a3a63f69951577\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610872806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a0823114610154578063a457c2d71461017a578063a9059cbb146101a6578063dd62ed3e146101d2578063df196dc21461020057610093565b8063095ea7b31461009857806318160ddd146100d857806323b872dd146100f25780633950935114610128575b600080fd5b6100c4600480360360408110156100ae57600080fd5b50600160a060020a03813516906020013561022e565b604080519115158252519081900360200190f35b6100e0610244565b60408051918252519081900360200190f35b6100c46004803603606081101561010857600080fd5b50600160a060020a0381358116916020810135909116906040013561024a565b6100c46004803603604081101561013e57600080fd5b50600160a060020a0381351690602001356102a1565b6100e06004803603602081101561016a57600080fd5b5035600160a060020a03166102dd565b6100c46004803603604081101561019057600080fd5b50600160a060020a0381351690602001356102f8565b6100c4600480360360408110156101bc57600080fd5b50600160a060020a038135169060200135610334565b6100e0600480360360408110156101e857600080fd5b50600160a060020a0381358116916020013516610341565b61022c6004803603604081101561021657600080fd5b50600160a060020a03813516906020013561036c565b005b600061023b33848461037a565b50600192915050565b60025490565b600061025784848461047a565b600160a060020a038416600090815260016020908152604080832033808552925290912054610297918691610292908663ffffffff6105d016565b61037a565b5060019392505050565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161023b918590610292908663ffffffff61063516565b600160a060020a031660009081526020819052604090205490565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161023b918590610292908663ffffffff6105d016565b600061023b33848461047a565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b610376828261069e565b5050565b600160a060020a03831615156103c9576040516000805160206107de83398151915281526004018080602001828103825260248152602001806108236024913960400191505060405180910390fd5b600160a060020a0382161515610418576040516000805160206107de83398151915281526004018080602001828103825260228152602001806107bc6022913960400191505060405180910390fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03831615156104c9576040516000805160206107de83398151915281526004018080602001828103825260258152602001806107fe6025913960400191505060405180910390fd5b600160a060020a0382161515610518576040516000805160206107de83398151915281526004018080602001828103825260238152602001806107996023913960400191505060405180910390fd5b600160a060020a038316600090815260208190526040902054610541908263ffffffff6105d016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610576908263ffffffff61063516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561062f57604080516000805160206107de833981519152815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008282018381101561069757604080516000805160206107de833981519152815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216151561070357604080516000805160206107de833981519152815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610716908263ffffffff61063516565b600255600160a060020a038216600090815260208190526040902054610742908263ffffffff61063516565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737308c379a00000000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a72305820d1f420509db23cfaf71b612dce2bc266813c958b19f1cba9c03dc2eb545fe8200029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806370a082311161006657806370a0823114610154578063a457c2d71461017a578063a9059cbb146101a6578063dd62ed3e146101d2578063df196dc21461020057610093565b8063095ea7b31461009857806318160ddd146100d857806323b872dd146100f25780633950935114610128575b600080fd5b6100c4600480360360408110156100ae57600080fd5b50600160a060020a03813516906020013561022e565b604080519115158252519081900360200190f35b6100e0610244565b60408051918252519081900360200190f35b6100c46004803603606081101561010857600080fd5b50600160a060020a0381358116916020810135909116906040013561024a565b6100c46004803603604081101561013e57600080fd5b50600160a060020a0381351690602001356102a1565b6100e06004803603602081101561016a57600080fd5b5035600160a060020a03166102dd565b6100c46004803603604081101561019057600080fd5b50600160a060020a0381351690602001356102f8565b6100c4600480360360408110156101bc57600080fd5b50600160a060020a038135169060200135610334565b6100e0600480360360408110156101e857600080fd5b50600160a060020a0381358116916020013516610341565b61022c6004803603604081101561021657600080fd5b50600160a060020a03813516906020013561036c565b005b600061023b33848461037a565b50600192915050565b60025490565b600061025784848461047a565b600160a060020a038416600090815260016020908152604080832033808552925290912054610297918691610292908663ffffffff6105d016565b61037a565b5060019392505050565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161023b918590610292908663ffffffff61063516565b600160a060020a031660009081526020819052604090205490565b336000818152600160209081526040808320600160a060020a0387168452909152812054909161023b918590610292908663ffffffff6105d016565b600061023b33848461047a565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b610376828261069e565b5050565b600160a060020a03831615156103c9576040516000805160206107de83398151915281526004018080602001828103825260248152602001806108236024913960400191505060405180910390fd5b600160a060020a0382161515610418576040516000805160206107de83398151915281526004018080602001828103825260228152602001806107bc6022913960400191505060405180910390fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03831615156104c9576040516000805160206107de83398151915281526004018080602001828103825260258152602001806107fe6025913960400191505060405180910390fd5b600160a060020a0382161515610518576040516000805160206107de83398151915281526004018080602001828103825260238152602001806107996023913960400191505060405180910390fd5b600160a060020a038316600090815260208190526040902054610541908263ffffffff6105d016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610576908263ffffffff61063516565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561062f57604080516000805160206107de833981519152815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b60008282018381101561069757604080516000805160206107de833981519152815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a038216151561070357604080516000805160206107de833981519152815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610716908263ffffffff61063516565b600255600160a060020a038216600090815260208190526040902054610742908263ffffffff61063516565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737308c379a00000000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a165627a7a72305820d1f420509db23cfaf71b612dce2bc266813c958b19f1cba9c03dc2eb545fe8200029",
  "sourceMap": "221:131:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:131:3;;;;;;;",
  "deployedSourceMap": "221:131:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:131:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:35;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2453:145:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1514:89;;;:::i;:::-;;;;;;;;;;;;;;;;3055:252;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3055:252:35;;;;;;;;;;;;;;;;;:::i;3702:203::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:203:35;;;;;;;;:::i;1661:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1661:108:35;-1:-1:-1;;;;;1661:108:35;;:::i;4392:213::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4392:213:35;;;;;;;;:::i;1972:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1972:153:35;;;;;;;;:::i;2183:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2183:132:35;;;;;;;;;;:::i;253:97:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;253:97:3;;;;;;;;:::i;:::-;;2453:145:35;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:35;2453:145;;;;:::o;1514:89::-;1584:12;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;-1:-1:-1;;;;;3235:19:35;;;;;;:11;:19;;;;;;;;3223:10;3235:31;;;;;;;;;3206:73;;3215:6;;3235:43;;3271:6;3235:43;:35;:43;:::i;:::-;3206:8;:73::i;:::-;-1:-1:-1;3296:4:35;3055:252;;;;;:::o;3702:203::-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:35;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;1661:108::-;-1:-1:-1;;;;;1744:18:35;1718:7;1744:18;;;;;;;;;;;;1661:108::o;4392:213::-;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:35;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;2183:132::-;-1:-1:-1;;;;;2281:18:35;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;253:97:3:-;322:23;328:8;338:6;322:5;:23::i;:::-;253:97;;:::o;7117:329:35:-;-1:-1:-1;;;;;7209:19:35;;;;7201:68;;;;-1:-1:-1;;;;;;;;;;;7201:68:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7287:21:35;;;;7279:68;;;;-1:-1:-1;;;;;;;;;;;7279:68:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7358:18:35;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7408:31;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:35;;;;5168:70;;;;-1:-1:-1;;;;;;;;;;;5168:70:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5256:23:35;;;;5248:71;;;;-1:-1:-1;;;;;;;;;;;5248:71:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:17:35;;:9;:17;;;;;;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:35;;;:9;:17;;;;;;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:35;;;:9;:20;;;;;;;;;;;;:55;;;;5459:35;;;;;;;5389:20;;5459:35;;;;;;;;;;;;;5079:422;;;:::o;1274:179:33:-;1332:7;1359:6;;;;1351:49;;;;;-1:-1:-1;;;;;;;;;;;1351:49:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:33;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;;;;;;;938:46:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:33:o;5771:302:35:-;-1:-1:-1;;;;;5846:21:35;;;;5838:65;;;;;-1:-1:-1;;;;;;;;;;;5838:65:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:12;;:24;;5946:6;5929:24;:16;:24;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:35;;:9;:18;;;;;;;;;;;:30;;6007:6;5984:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5963:18:35;;:9;:18;;;;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;:9;;6029:37;;;;;;;;;;5771:302;;:::o",
  "source": "pragma solidity >= 0.5.0 <0.7.0;\n\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"@aztec/protocol/contracts/ERC1724/ZkAssetMintable.sol\";\nimport \"@aztec/protocol/contracts/ERC1724/ZkAsset.sol\";\n\n\ncontract TestERC20 is ERC20 {\n  function giveMeTokens(address _account, uint256 _value) public {\n    _mint(_account, _value);\n  }\n}\n\ncontract TestZkAssetMintable is ZkAssetMintable {\n\n}\n\ncontract TestZkAsset is ZkAsset {\n\n}\n",
  "sourcePath": "/Users/vcrizpy/Desktop/dapps/ethindia2.0/aztec-zk-subscriptions/contracts/TestERC20.sol",
  "ast": {
    "absolutePath": "/Users/vcrizpy/Desktop/dapps/ethindia2.0/aztec-zk-subscriptions/contracts/TestERC20.sol",
    "exportedSymbols": {
      "TestERC20": [
        133
      ],
      "TestZkAsset": [
        139
      ],
      "TestZkAssetMintable": [
        136
      ]
    },
    "id": 140,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 114,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 115,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 4164,
        "src": "35:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/ERC1724/ZkAssetMintable.sol",
        "file": "@aztec/protocol/contracts/ERC1724/ZkAssetMintable.sol",
        "id": 116,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1829,
        "src": "99:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/ERC1724/ZkAsset.sol",
        "file": "@aztec/protocol/contracts/ERC1724/ZkAsset.sol",
        "id": 117,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1802,
        "src": "163:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 118,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4163,
              "src": "243:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4163",
                "typeString": "contract ERC20"
              }
            },
            "id": 119,
            "nodeType": "InheritanceSpecifier",
            "src": "243:5:3"
          }
        ],
        "contractDependencies": [
          4163,
          4232
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 133,
        "linearizedBaseContracts": [
          133,
          4163,
          4232
        ],
        "name": "TestERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "316:34:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "328:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "338:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 126,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "322:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "322:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "322:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveMeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "275:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "293:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:34:3"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:3"
            },
            "scope": 133,
            "src": "253:97:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "221:131:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 134,
              "name": "ZkAssetMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1828,
              "src": "386:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZkAssetMintable_$1828",
                "typeString": "contract ZkAssetMintable"
              }
            },
            "id": 135,
            "nodeType": "InheritanceSpecifier",
            "src": "386:15:3"
          }
        ],
        "contractDependencies": [
          1828,
          2522,
          2889,
          3020,
          3091,
          3171,
          3330,
          3766
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 136,
        "linearizedBaseContracts": [
          136,
          1828,
          2889,
          3020,
          3766,
          2522,
          3330,
          3091,
          3171
        ],
        "name": "TestZkAssetMintable",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 140,
        "src": "354:52:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 137,
              "name": "ZkAsset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1801,
              "src": "432:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZkAsset_$1801",
                "typeString": "contract ZkAsset"
              }
            },
            "id": 138,
            "nodeType": "InheritanceSpecifier",
            "src": "432:7:3"
          }
        ],
        "contractDependencies": [
          1801,
          2522,
          3091,
          3171,
          3330
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 139,
        "linearizedBaseContracts": [
          139,
          1801,
          2522,
          3330,
          3091,
          3171
        ],
        "name": "TestZkAsset",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 140,
        "src": "408:36:3"
      }
    ],
    "src": "0:445:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/vcrizpy/Desktop/dapps/ethindia2.0/aztec-zk-subscriptions/contracts/TestERC20.sol",
    "exportedSymbols": {
      "TestERC20": [
        133
      ],
      "TestZkAsset": [
        139
      ],
      "TestZkAssetMintable": [
        136
      ]
    },
    "id": 140,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 114,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 115,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 4164,
        "src": "35:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/ERC1724/ZkAssetMintable.sol",
        "file": "@aztec/protocol/contracts/ERC1724/ZkAssetMintable.sol",
        "id": 116,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1829,
        "src": "99:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/ERC1724/ZkAsset.sol",
        "file": "@aztec/protocol/contracts/ERC1724/ZkAsset.sol",
        "id": 117,
        "nodeType": "ImportDirective",
        "scope": 140,
        "sourceUnit": 1802,
        "src": "163:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 118,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4163,
              "src": "243:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$4163",
                "typeString": "contract ERC20"
              }
            },
            "id": 119,
            "nodeType": "InheritanceSpecifier",
            "src": "243:5:3"
          }
        ],
        "contractDependencies": [
          4163,
          4232
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 133,
        "linearizedBaseContracts": [
          133,
          4163,
          4232
        ],
        "name": "TestERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "316:34:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "328:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "338:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 126,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "322:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "322:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "322:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "giveMeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "275:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "293:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:34:3"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "316:0:3"
            },
            "scope": 133,
            "src": "253:97:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 140,
        "src": "221:131:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 134,
              "name": "ZkAssetMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1828,
              "src": "386:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZkAssetMintable_$1828",
                "typeString": "contract ZkAssetMintable"
              }
            },
            "id": 135,
            "nodeType": "InheritanceSpecifier",
            "src": "386:15:3"
          }
        ],
        "contractDependencies": [
          1828,
          2522,
          2889,
          3020,
          3091,
          3171,
          3330,
          3766
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 136,
        "linearizedBaseContracts": [
          136,
          1828,
          2889,
          3020,
          3766,
          2522,
          3330,
          3091,
          3171
        ],
        "name": "TestZkAssetMintable",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 140,
        "src": "354:52:3"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 137,
              "name": "ZkAsset",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1801,
              "src": "432:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZkAsset_$1801",
                "typeString": "contract ZkAsset"
              }
            },
            "id": 138,
            "nodeType": "InheritanceSpecifier",
            "src": "432:7:3"
          }
        ],
        "contractDependencies": [
          1801,
          2522,
          3091,
          3171,
          3330
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 139,
        "linearizedBaseContracts": [
          139,
          1801,
          2522,
          3330,
          3091,
          3171
        ],
        "name": "TestZkAsset",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 140,
        "src": "408:36:3"
      }
    ],
    "src": "0:445:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-08-04T06:44:33.361Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}